%YAML 1.1
---
# Snapcraft Recipe for Screenkey
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * The snapcraft format
#   https://docs.snapcraft.io/the-snapcraft-format/8337
# * Snap Documentation
#   https://docs.snapcraft.io
# * Topics under the doc category in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

# All following comments, including this one, are designed to be stripped
# before contributing the recipe to the upstream

name: screenkey
title: Screenkey - Screencast your keys.
summary: A screencast tool to display your keys, inspired by Screenflick.
description: |
  This is an almost-complete rewrite of [screenkey](https://launchpad.net/screenkey) 0.2, featuring:

  - Several keyboard translation methods
  - Key composition/input method support
  - Configurable font/size/position
  - Highlighting of recent keystrokes
  - Improved backspace processing
  - Normal/Emacs/Mac caps modes
  - Multi-monitor support
  - Dynamic recording control
  - Switch for visible shift and modifier sequences only
  - Repeats compression
  - Countless bug fixes

# The path of icon to represent the snap, relative to the source tree directory
# Only PNG or SVG image is supported, dimension must be greater than 256x256px
icon: snap/gui/screenkey-logo.svg

# The license of this application, in SPDX format
# NOTE: Currently only supports SPDX 2.1 license expressions, as described in Appendix IV of
# https://spdx.org/spdx-specification-21-web-version
# Supported expressions:
# https://github.com/snapcore/snapd/blob/HEAD/spdx/licenses.go
license: GPL-3.0+

# Version string just for humans, typically '1.2+git' or '1.3.2'
# The wrapping single quotes are often required to avoid the version string
# being accidentally interpreted as a YAML non-string(like '1', '1.2').
# http://yaml.org/type
# https://arp242.net/weblog/yaml_probably_not_so_great_after_all.html#surprising-behaviour
# NOTE: This key is mutual exclusive with the `adopt-info` key
#version: Derived from the part specified by the `adopt-info` property

# Extract metadata from the main snap part
# https://forum.snapcraft.io/t/extracting-information-from-sources-in-snapcraft-parts/4642
adopt-info: main

# Snapd feature set and version the snap requires in order to work
# https://forum.snapcraft.io/t/snapcraft-top-level-metadata/8334#heading--assumes
assumes:
  - command-chain

# Base runtime
# The common runtime for the snap to run on, or `bare` for static linked applications
base: core18
# https://docs.snapcraft.io/snapcraft-top-level-metadata/8334#heading--base

# Security confinement
# Use `devmode` to getting started
# Flip to `strict` once you have the right plugs and slots,
# or `classic` once you determine that strict confinement is not currently possible
confinement: strict

# Snap Grade
# Use `devel` to getting started
# Flip to `stable` once you determine that the snap is matured, only `stable` grade
# snaps can be promoted to `candidate` and `stable` channels
grade: stable

# Run `snapcraft help sources` for supported keywords on pulling a part's source ingredients
# Run `snapcraft plugins` for supported build helper plugins
# Run `snapcraft help plugins` for supported keywords on building a part
# For `override-*` scriptlets used to modify behavior of certain part's lifecycle phase, check out:
# https://docs.snapcraft.io/scriptlets/4892
parts:
  # Files to patch the files in the snap
  patching:
    source: snap/local/patching
    plugin: dump
    organize:
      '*': patching/
    prime:
      - -*

  # Launcher programs to fix problems at runtime
  launchers:
    source: snap/local/launchers
    plugin: dump
    organize:
      '*': bin/
    stage:
      - -bin/README.*

  # Integrate custom dialogs in your snap - doc - snapcraft.io
  # https://forum.snapcraft.io/t/integrate-custom-dialogs-in-your-snap/10825
  zenity-integration:
    plugin: nil
    stage-snaps:
      - zenity-integration

  # Check out the tagged release revision if it isn't promoted to the stable channel
  # https://forum.snapcraft.io/t/selective-checkout-check-out-the-tagged-release-revision-if-it-isnt-promoted-to-the-stable-channel/10617
  selective-checkout:
    source: https://github.com/Lin-Buo-Ren/selective-checkout.git
    source-tag: v2.0.2
    plugin: dump
    build-packages:
      # Scriptlet dependencies
      - curl
      - jq
      - sed
      - git
    stage:
      - scriptlets/selective-checkout
    prime:
      - -*

  main:
    after:
      - patching
      - selective-checkout

    source: https://gitlab.com/screenkey/screenkey.git
    source-depth: 100
    override-pull: |
      set -o nounset

      snapcraftctl pull

      "${SNAPCRAFT_STAGE}"/scriptlets/selective-checkout \
        --append-packaging-revision \
        --stable-tag-pattern='^v'

    plugin: python
    build-snaps:
      - gnome-3-28-1804-sdk/latest/edge
    build-packages:
      - intltool
      - libgirepository1.0-dev
    # TODO: Remove build dependencies after build
    python-packages:
      - https://salsa.debian.org/python-team/packages/python-distutils-extra/-/archive/2.45/python-distutils-extra-2.45.tar.gz
      #- https://launchpad.net/python-distutils-extra/trunk/2.39/+download/python-distutils-extra-2.39.tar.gz
      - PyGObject
      - Pycairo
    stage-packages:
      - fonts-font-awesome
      - slop
    override-build: |
      set \
        -o nounset

      patch \
        --strip=1 \
        < "${SNAPCRAFT_STAGE}"/patching/fix-missing-integration-of-distutilsextra-in-setup-py.patch
      patch \
        --strip=1 \
        < "${SNAPCRAFT_STAGE}"/patching/disable-i18n-for-now.patch

      snapcraftctl build

      PATH="${SNAPCRAFT_PART_INSTALL}"/bin:"${PATH}" \
        PYTHONUSERBASE="${SNAPCRAFT_PART_INSTALL}" \
        pip \
          uninstall \
          --disable-pip-version-check \
          --yes \
          python-distutils-extra \
          setuptools \
          wheel
      PATH="${SNAPCRAFT_PART_INSTALL}"/bin:"${PATH}" \
        PYTHONUSERBASE="${SNAPCRAFT_PART_INSTALL}" \
        pip \
          uninstall \
          --disable-pip-version-check \
          --yes \
          pip

    override-prime: |
      set \
        -o nounset

        snapcraftctl prime

        "${SNAPCRAFT_STAGE}"/patching/patch-desktop-entries.bash

# Apps that are exposed by the snap package
# If the _app_name_ is identical with the _snap_name_ it can be directly run
# with `_snap_name_` or `snap run _snap_name_` commands, otherwise it can only be run
# via `_snap_name_._app_name_` or `snap run _snap_name_._app_name_`
apps:
  screenkey:
    # The adapter to set up runtime environment at the launch of the snap
    # NOTE: The `command-chain` property is only supported by the `full` adapter
    adapter: full

    # An *relative path* to an executable file root from the `prime` directory to be executed, and its command-line arguments
    # NOTE: The right angle bracket at the beginning of the value of the `command` keyword starts a YAML folded style block scalar, refer the following spec document for more info: http://yaml.org/spec/1.2/spec.html#id2796251
    command: bin/screenkey

    # The commands that are run, in order, before running the one specified by the `command` key
    command-chain:
      - bin/desktop-launch
      - bin/screenkey-launch

    # If the providing part of the app. has a desktop entry, specify its path relative to the `prime` directory.
    # If the packaging target doesn't provide a desktop entry, ignore the `desktop` key and implement a desktop entry in `/snap/gui`
    desktop: share/applications/screenkey.desktop

    extensions:
      - gnome-3-28

# Refer the following documentation for asserting interface plugs and slots in a security confined snap:
# Interface management - doc - snapcraft.io
# https://docs.snapcraft.io/interface-management/6154
# Supported interfaces - doc - snapcraft.io
# https://docs.snapcraft.io/supported-interfaces/7744
# Non-A/C: Non-autoconnect interface
plugs:
  # Common desktop interfaces
  # https://forum.snapcraft.io/t/the-desktop-interfaces/2042
  desktop:
  desktop-legacy:
  unity7:
  wayland:
